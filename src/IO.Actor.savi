// TODO: Documentation
:trait tag IO.Actor(ActionType val)
  :is AsioEvent.Actor
  :fun io @->(IO.Engine(ActionType))
  :fun ref io_react(action ActionType) @

  :be io_deferred_action(input_action ActionType)
    @io.deferred_action(input_action) -> (action | @io_react(action))

  :: This is a special behaviour that hooks into the AsioEvent.Actor runtime,
  :: called whenever an event handle we're subscribed to receives an event.
  ::
  :: We expect the _io engine to interpret the event into an action to yield,
  :: and we will forward the yielded action the the io_react method.
  :be _asio_event(event AsioEvent)
    @io.react(event) -> (action | @io_react(action))
